{"version":3,"sources":["components/contactForm/ContactForm.js","components/contactList/contactItem/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","target","value","setState","submitForm","e","preventDefault","elem","id","uuidv4","props","onAddContact","onSubmit","this","type","onChange","required","React","Component","ContactItem","contact","delContact","data-id","onClick","dataset","ContactList","contacts","map","el","key","Filter","getFilterName","placeholder","App","filter","event","addContact","newContact","find","alert","prevState","localContacts","localStorage","getItem","parseLocalContacts","JSON","parse","prevProps","setItem","stringify","filteredItems","toLowerCase","includes","filterContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f21b4b7.chunk.js","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class ContactForm extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target: { value, name } }) => {\n    this.setState({ [name]: value });\n  };\n  submitForm = e => {\n    e.preventDefault();\n    const elem = {\n      name: this.state.name,\n      number: this.state.number,\n      id: uuidv4(),\n    };\n    this.props.onAddContact(elem);\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <>\n        <form onSubmit={this.submitForm}>\n          <label>\n            Name\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              name=\"number\"\n              type=\"text\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <button type=\"submit\">Add Contact</button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nexport function ContactItem({ contact: { name, number, id }, delContact }) {\n  return (\n    <li>\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n        data-id={id}\n        onClick={e => {\n          delContact(e.target.dataset.id);\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n","import React from 'react';\nimport { ContactItem } from './contactItem/ContactItem.js';\n\nexport function ContactList({ contacts, delContact }) {\n  return (\n    <ul>\n      {contacts.map(el => (\n        <ContactItem key={el.id} contact={el} delContact={delContact} />\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\n\nexport function Filter({ getFilterName }) {\n  const getValue = ({ target: { value } }) => {\n    getFilterName(value);\n  };\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          onChange={getValue}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name\"\n        />\n      </label>\n    </>\n  );\n}\n","import React, { Component } from 'react';\nimport { ContactForm } from './contactForm/ContactForm.js';\nimport { ContactList } from './contactList/ContactList.js';\nimport { Filter } from './filter/Filter.js';\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermion Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  addContact = newContact => {\n    this.state.contacts.find(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} added to contacts`)\n      : this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, newContact],\n          };\n        });\n  };\n\n  getFilterName = value => {\n    this.setState({ filter: value });\n  };\n\n  delContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  componentDidMount() {\n    const localContacts = localStorage.getItem('contacts');\n    const parseLocalContacts = JSON.parse(localContacts);\n    if (parseLocalContacts) {\n      this.setState({ contacts: [...parseLocalContacts] });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const contacts = this.state.contacts;\n    const filter = this.state.filter;\n    const filteredItems = filterContacts(contacts, filter);\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 1 ? (\n          <Filter getFilterName={this.getFilterName} />\n        ) : null}\n        <ContactList contacts={filteredItems} delContact={this.delContact} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}